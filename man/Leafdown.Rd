% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Leafdown.R
\name{Leafdown}
\alias{Leafdown}
\title{Leafdown R6 Class}
\description{
This class acts as a wrapper around the leaflet map. It allows the user to:
- select shapes
- drill down on these selected shapes
- drill up
- convenient functions to connect the map to graphs
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{spdfs_list}}{The spdfs of all map levels. This is set in \code{initialize} and cannot be changed afterwards.}

\item{\code{map_output_id}}{The id from the shiny-ui used in the \code{leafletOutput("<<id>>")}. Used to observe for _shape_click events.}

\item{\code{curr_data}}{The spdf-metadata from the currently used shapes AND the corresponding values.}

\item{\code{curr_map_level}}{The current map level.
This corresponds to the position of the shapes in the \code{spdfs_list}.
(i.e The highest-level is 1, the next is 2 and so on...)}

\item{\code{curr_selection}}{The selected shapes of the current level. They will be highlighted on the map.
Calling \code{\link{drill_down}} will drill down on these selected shapes.}

\item{\code{curr_spdf}}{The spdfs of the current map level.
curr_poly_ids The ids of all polygons of the current map level.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Leafdown$new()}}
\item \href{#method-draw_leafdown}{\code{Leafdown$draw_leafdown()}}
\item \href{#method-get_current_metadata}{\code{Leafdown$get_current_metadata()}}
\item \href{#method-add_data}{\code{Leafdown$add_data()}}
\item \href{#method-drill_down}{\code{Leafdown$drill_down()}}
\item \href{#method-drill_up}{\code{Leafdown$drill_up()}}
\item \href{#method-clone}{\code{Leafdown$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initializes the observer for the maps _shape_click events. This is needed for the selection.
Once a shape is clicked, it is added to the \code{.curr_selection} (or removed from it).
The outline of selected shapes is highlighted via the showGroup (hideGroup) functions.



\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$new(spdfs_list, map_output_id, input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{spdfs_list}}{The spdfs of all map levels. This cannot be changed later}

\item{\code{map_output_id}}{The id from the shiny-ui used in the \code{leafletOutput("<<id>>")}. Used to observe for _shape_click events.}

\item{\code{input}}{The \code{input} from the shiny app}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-draw_leafdown"></a>}}
\if{latex}{\out{\hypertarget{method-draw_leafdown}{}}}
\subsection{Method \code{draw_leafdown()}}{
Draws the leaflet map on the current map level. All unselected parents will be drawn in gray.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$draw_leafdown(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Additional arguments given to \code{leaflet::addPolygons}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_current_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-get_current_metadata}{}}}
\subsection{Method \code{get_current_metadata()}}{
Returns the metadata of the shapes from the current maplevel.
This may differ from what is displayed if \code{drill_down} was called but \code{draw_leafdown} wasn't (yet)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$get_current_metadata()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The current meta-data
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_data"></a>}}
\if{latex}{\out{\hypertarget{method-add_data}{}}}
\subsection{Method \code{add_data()}}{
Sets the data of the current shapes. This includes the meta-data AND the values given by the user.
These values can be used to draw differently colored shapes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$add_data(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The new data existing of the meta-data and the values to display in the map(color)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-drill_down"></a>}}
\if{latex}{\out{\hypertarget{method-drill_down}{}}}
\subsection{Method \code{drill_down()}}{
Drills down to the lower level if:
- there is a lower level (for now there are only two levels)
- at least one shape is selected to drill down on
!This will not redraw the map! Also call \code{add_data} to add data for the new level and then
  \code{draw_leafdown} to redraw the map on the new level
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$drill_down()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-drill_up"></a>}}
\if{latex}{\out{\hypertarget{method-drill_up}{}}}
\subsection{Method \code{drill_up()}}{
Drills up to the higher level if:
- there is a higher level (for now there are only two levels)
!This will not redraw the map! Also call \code{add_data} to add data for the new level and then
  \code{draw_leafdown} to redraw the map on the new level
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$drill_up()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
