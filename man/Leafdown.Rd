% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Leafdown.R
\name{Leafdown}
\alias{Leafdown}
\title{Leafdown R6 Class}
\description{
This class acts as a wrapper around the leaflet map. A leaflet map allows the user of the shiny app to:
\itemize{
  \item select shapes / regions
  \item drill down on these selected shapes
  \item drill up
}

The active bindings of the class provide convenient interfaces between the leafdown map
and other elements in the shiny app e.g. graphs, tables etc.
A leafdown object can \strong{only} be used in a shiny app.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{spdfs_list}}{The spdfs of all map levels. This is set in \code{initialize} and cannot be changed afterwards.
At the moment only two map levels are possible.}

\item{\code{map_output_id}}{The id from the shiny ui used in the \code{leafletOutput("<<id>>")}. Used to observe for _shape_click events.}

\item{\code{curr_data}}{The metadata and (if available) the corresponding values of all currently displayed shapes.}

\item{\code{curr_sel_data}}{A \code{reactiveValue} containing a data.frame with
the metadata and (if available) the corresponding values of all currently selected shapes.}

\item{\code{curr_map_level}}{Index of the current map level.
This corresponds to the position of the shapes in the \code{spdfs_list}.
(i.e The highest-level is 1, the next is 2 and so on...).
At the moment only two map levels are possible.
curr_sel_ids The ids of the selected shapes of the current level. They will be highlighted on the map.
Calling \code{drill_down}, the drill down functionality is executed for these shapes.}

\item{\code{curr_spdf}}{The spdfs of the current map level.
curr_poly_ids The ids of all polygons of the current map level.
selected_parents The selected spdf shapes from the higher level. (Subset of spdfs_list)
unselected_parents All spdf shapes from the higher level which are not selected. They will be drawn in gray.
(Subset of spdfs_list)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Leafdown$new()}}
\item \href{#method-draw_leafdown}{\code{Leafdown$draw_leafdown()}}
\item \href{#method-get_current_metadata}{\code{Leafdown$get_current_metadata()}}
\item \href{#method-add_data}{\code{Leafdown$add_data()}}
\item \href{#method-drill_down}{\code{Leafdown$drill_down()}}
\item \href{#method-drill_up}{\code{Leafdown$drill_up()}}
\item \href{#method-toggle_shape_select}{\code{Leafdown$toggle_shape_select()}}
\item \href{#method-clone}{\code{Leafdown$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initializes the observer for the maps _shape_click events. This is needed for the shape selection.
Once a shape is clicked, it is added to (or removed from) \code{.curr_sel_ids}.
The outline of selected shapes is highlighted via the showGroup (hideGroup) functions.


Initializes the leafdown object.
This will not draw the map. First add data and then call \code{draw_leafdown} to draw the map.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$new(spdfs_list, map_output_id, input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{spdfs_list}}{The spdfs of all map levels. This cannot be changed later}

\item{\code{map_output_id}}{The id from the shiny-ui used in the \code{leafletOutput("<<id>>")}. Used to observe for _shape_click events.}

\item{\code{input}}{The \code{input} from the shiny app}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-draw_leafdown"></a>}}
\if{latex}{\out{\hypertarget{method-draw_leafdown}{}}}
\subsection{Method \code{draw_leafdown()}}{
Draws the leaflet map on the current map level. All unselected parents will be drawn in gray.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$draw_leafdown(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Additional arguments given to \code{leaflet::addPolygons}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_current_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-get_current_metadata}{}}}
\subsection{Method \code{get_current_metadata()}}{
Returns the metadata of the shapes from the current maplevel.
This may differ from what is displayed if \code{drill_down} has been called but \code{draw_leafdown}
has not been (yet).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$get_current_metadata()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The current meta-data
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_data"></a>}}
\if{latex}{\out{\hypertarget{method-add_data}{}}}
\subsection{Method \code{add_data()}}{
Adds the data to the currently displayed shapes.
This includes the meta-data AND the values to be visualized in the map.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$add_data(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The new data existing of the meta-data and the values to display in the map(color)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-drill_down"></a>}}
\if{latex}{\out{\hypertarget{method-drill_down}{}}}
\subsection{Method \code{drill_down()}}{
Drills down to the lower level if:
- there is a lower level (for now there are only two levels)
- at least one shape is selected to drill down on
!This will not redraw the map! Also call \code{add_data} to add data for the new level and then
  \code{draw_leafdown} to redraw the map on the new level
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$drill_down()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-drill_up"></a>}}
\if{latex}{\out{\hypertarget{method-drill_up}{}}}
\subsection{Method \code{drill_up()}}{
Drills up to the higher level if:
- there is a higher level (for now there are only two levels)
!This will not redraw the map! Also call \code{add_data} to add data for the new level and then
  \code{draw_leafdown} to redraw the map on the new level
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$drill_up()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-toggle_shape_select"></a>}}
\if{latex}{\out{\hypertarget{method-toggle_shape_select}{}}}
\subsection{Method \code{toggle_shape_select()}}{
Selects the shape with the given shape id, or unselects it if it was already selected.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$toggle_shape_select(shape_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{shape_id}}{the id of the shape to select, has to be a character and in the current map-level.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Leafdown$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
